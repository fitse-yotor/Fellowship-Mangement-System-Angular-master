{"version":3,"sources":["webpack:///./src/app/campaigns/campaigns-modal/campaigns-modal.component.html","webpack:///./src/app/campaigns/campaigns-modal/campaigns-modal.component.scss","webpack:///./src/app/campaigns/campaigns-modal/campaigns-modal.component.ts","webpack:///./src/app/campaigns/campaigns-routing.module.ts","webpack:///./src/app/campaigns/campaigns.component.html","webpack:///./src/app/campaigns/campaigns.component.scss","webpack:///./src/app/campaigns/campaigns.component.ts","webpack:///./src/app/campaigns/campaigns.module.ts","webpack:///./src/app/campaigns/campaigns.service.ts"],"names":[],"mappings":"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","file":"campaigns-campaigns-module.js","sourcesContent":["module.exports = \"<!--<button mat-button (click)=\\\"onNoClick()\\\">No Thanks</button>-->\\r\\n<!--<h1 mat-dialog-title>Hi {{data.name}}</h1>-->\\r\\n<!--<div mat-dialog-content>-->\\r\\n<!--<p>What's your favorite animal?</p>-->\\r\\n<!--<mat-form-field>-->\\r\\n<!--<input matInput [(ngModel)]=\\\"data.animal\\\">-->\\r\\n<!--</mat-form-field>-->\\r\\n<!--</div>-->\\r\\n\\r\\n<form [formGroup]=\\\"campaignsModalForm\\\" (ngSubmit)=\\\"campaignsModal(campaignsModalForm.value)\\\">\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input matInput placeholder=\\\"Campaign Name\\\" type=\\\"text\\\" formControlName=\\\"campaign_name\\\">\\r\\n    <mat-error style=\\\"color: red\\\" *ngIf=\\\"campaignsModalForm.get('campaign_name').invalid && (campaignsModalForm.get('campaign_name').dirty ||\\r\\n      campaignsModalForm.get('campaign_name').touched) && campaignsModalForm.get('campaign_name').errors?.required\\\">\\r\\n      Please insert first name!\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <mat-label>SMS Port</mat-label>\\r\\n    <mat-select formControlName=\\\"sms_port\\\">\\r\\n      <mat-option *ngFor=\\\"let sms_port of port\\\" [value]=\\\"sms_port.type\\\">\\r\\n        {{sms_port.name}}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <textarea matInput placeholder=\\\"Enter description of the Campaign \\\" type=\\\"text\\\" formControlName=\\\"description\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n\\r\\n  <!--<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" >Add contact</button>-->\\r\\n  <div mat-dialog-actions>\\r\\n    <button mat-button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\"  cdkFocusInitial >Add New Campaign</button>\\r\\n    <button mat-button (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n  </div>\\r\\n</form>\"","module.exports = \"\"","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { PortInterface } from '../campaigns';\r\ninterface CampaignsModalInterface {\r\n    campaign_name: string;\r\n    sms_port: string;\r\n    description: string\r\n}\r\n\r\nexport interface DialogData {\r\n    animal: string;\r\n    name: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'app-campaigns-modal',\r\n    templateUrl: './campaigns-modal.component.html',\r\n    styleUrls: ['./campaigns-modal.component.scss']\r\n})\r\nexport class CampaignsModalComponent implements OnInit {\r\n\r\n    campaignsModalForm: any;\r\n    port: PortInterface[] = [\r\n        {type: '', name: ''},\r\n        {type: '', name: ''}\r\n    ];\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        public dialogRef: MatDialogRef<CampaignsModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // this.getEvent();\r\n        this.campaignsModalForm = this.formBuilder.group({\r\n            campaign_name: [null, [Validators.required]],\r\n            sms_port: [null, [Validators.required]],\r\n            description: [null, [Validators.required]]\r\n        });\r\n    }\r\n\r\n    campaignsModal(campaignsModalInterface: CampaignsModalInterface) {\r\n        console.log(campaignsModalInterface);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CampaignsComponent } from './campaigns.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: CampaignsComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class CampaignsRoutingModule { }\r\n","module.exports = \"<p style=\\\"font-weight: bolder; font-size: x-large\\\"> Fellowship SMS Service </p>\\r\\n\\r\\n<mat-card style=\\\"width: 1000px; margin-left: 30px; margin-top: 61px; font-size: x-large; font-weight: bolder\\\">\\r\\n    <h3 style=\\\"font-weight: normal\\\">Fellowship SMS Campaigns</h3>\\r\\n    <h5 style=\\\"color: grey\\\">List of all available SMS campaigns</h5>\\r\\n    <button style=\\\"margin-bottom: 10px\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"openCreate()\\\">Add New Campaign</button>\\r\\n</mat-card>\\r\\n\\r\\n\\r\\n<!--<p style=\\\"font-weight: bolder; font-size: x-large\\\"> Account User </p>-->\\r\\n<!--&lt;!&ndash;<ol>&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;<li>&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;<mat-form-field>&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;<input matInput [(ngModel)]=\\\"name\\\" placeholder=\\\"What's your name?\\\">&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;</mat-form-field>&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;</li>&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;<div class=\\\"create\\\" style=\\\"color: yellow; width: 100%\\\">&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;<li>&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;<button class=\\\"l1\\\" mat-raised-button (click)=\\\"openDialog()\\\">Create</button>&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;</li>&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;<li *ngIf=\\\"animal\\\">&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;You chose: <i>{{animal}}</i>&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;</li>&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;&lt;!&ndash;</ol>&ndash;&gt;&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;</div>&ndash;&gt;-->\\r\\n\\r\\n<!--<div class=\\\"container\\\">-->\\r\\n    <!--<mat-form-field>-->\\r\\n        <!--<input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">-->\\r\\n    <!--</mat-form-field>-->\\r\\n\\r\\n    <!--<table style=\\\"width: 100%\\\" mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">-->\\r\\n\\r\\n        <!--&lt;!&ndash; Position Column &ndash;&gt;-->\\r\\n        <!--<ng-container matColumnDef=\\\"position\\\">-->\\r\\n            <!--<th mat-header-cell *matHeaderCellDef style=\\\"font-weight: bold\\\"> ID </th>-->\\r\\n            <!--<td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>-->\\r\\n        <!--</ng-container>-->\\r\\n\\r\\n        <!--&lt;!&ndash; Name Column &ndash;&gt;-->\\r\\n        <!--<ng-container matColumnDef=\\\"full_name\\\">-->\\r\\n            <!--<th mat-header-cell *matHeaderCellDef style=\\\"font-weight: bold\\\">Full Name </th>-->\\r\\n            <!--<td mat-cell *matCellDef=\\\"let element\\\"> {{element.full_name}} </td>-->\\r\\n        <!--</ng-container>-->\\r\\n\\r\\n        <!--&lt;!&ndash; Name Column &ndash;&gt;-->\\r\\n        <!--<ng-container matColumnDef=\\\"phone\\\">-->\\r\\n            <!--<th mat-header-cell *matHeaderCellDef style=\\\"font-weight: bold\\\">Phone Number </th>-->\\r\\n            <!--<td mat-cell *matCellDef=\\\"let element\\\"> {{element.phone}} </td>-->\\r\\n        <!--</ng-container>-->\\r\\n\\r\\n        <!--&lt;!&ndash; Weight Column &ndash;&gt;-->\\r\\n        <!--<ng-container matColumnDef=\\\"user_role\\\">-->\\r\\n            <!--<th mat-header-cell *matHeaderCellDef style=\\\"font-weight: bold\\\"> User Role </th>-->\\r\\n            <!--<td mat-cell *matCellDef=\\\"let element\\\"> {{element.user_role}} </td>-->\\r\\n        <!--</ng-container>-->\\r\\n\\r\\n        <!--&lt;!&ndash; Symbol Column &ndash;&gt;-->\\r\\n        <!--<ng-container matColumnDef=\\\"created_date\\\">-->\\r\\n            <!--<th mat-header-cell *matHeaderCellDef style=\\\"font-weight: bold\\\"> Created Date </th>-->\\r\\n            <!--<td mat-cell *matCellDef=\\\"let element\\\"> {{element.created_date}} </td>-->\\r\\n        <!--</ng-container>-->\\r\\n\\r\\n        <!--&lt;!&ndash; Symbol Column &ndash;&gt;-->\\r\\n        <!--<ng-container matColumnDef=\\\"updated_date\\\">-->\\r\\n            <!--<th mat-header-cell *matHeaderCellDef style=\\\"font-weight: bold\\\"> Updated Date </th>-->\\r\\n            <!--<td mat-cell *matCellDef=\\\"let element\\\"> {{element.updated_date}} </td>-->\\r\\n        <!--</ng-container>-->\\r\\n\\r\\n        <!--&lt;!&ndash; Symbol Column &ndash;&gt;-->\\r\\n        <!--<ng-container matColumnDef=\\\"action\\\">-->\\r\\n            <!--<th mat-header-cell *matHeaderCellDef style=\\\"font-weight: bold\\\"> Action </th>-->\\r\\n            <!--<td mat-cell *matCellDef=\\\"let element\\\">-->\\r\\n                <!--&lt;!&ndash;<button mat-button=\\\"\\\">&ndash;&gt;-->\\r\\n                    <!--&lt;!&ndash;<mat-icon  mat-raised-button (click)=\\\"openUpdate(element)\\\">edit</mat-icon></button>&ndash;&gt;-->\\r\\n                <!--&lt;!&ndash;<button mat-button=\\\"\\\">&ndash;&gt;-->\\r\\n                    <!--&lt;!&ndash;<mat-icon style=\\\"color: red;\\\" mat-raised-button&ndash;&gt;-->\\r\\n                              <!--&lt;!&ndash;(click)=\\\"delete(element.id)\\\">delete_outline</mat-icon></button>&ndash;&gt;-->\\r\\n            <!--</td>-->\\r\\n        <!--</ng-container>-->\\r\\n\\r\\n        <!--<tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>-->\\r\\n        <!--<tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>-->\\r\\n    <!--</table>-->\\r\\n<!--</div>-->\\r\\n\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatBottomSheet, MatBottomSheetRef, MatDialog, MatTableDataSource } from '@angular/material';\r\nimport { CampaignsModalComponent } from './campaigns-modal/campaigns-modal.component';\r\nimport { CampaignsService } from './campaigns.service';\r\n\r\n\r\nexport interface PeriodicElement {\r\n    position: number;\r\n    full_name: string\r\n    phone: string;\r\n    user_role: string;\r\n    created_date: string;\r\n    updated_date: string;\r\n    action?: string;\r\n}\r\n\r\n\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n    {position: 1, full_name: 'Yitages', phone: '0912342421', user_role: 'Berhanu', created_date: 'Addis Ababa', updated_date: '12/3/2011'},\r\n    {position: 2, full_name: 'Meheret', phone: '0911374382', user_role: 'Tesfaye', created_date: 'Hawassa', updated_date: '24/5/2011'}\r\n];\r\n\r\n@Component({\r\n    selector: 'app-campaigns',\r\n    templateUrl: './campaigns.component.html',\r\n    styleUrls: ['./campaigns.component.scss'],\r\n})\r\nexport class CampaignsComponent implements OnInit {\r\n\r\n    animal: string;\r\n    firstname: string;\r\n\r\n\r\n    // displayedColumns: string[] = ['position', 'firstname', 'lastname', 'user_role', 'phone', 'action'];\r\n    displayedColumns: string[] = ['position', 'full_name', 'phone', 'user_role', 'created_date', 'updated_date', 'action'];\r\n    dataSource = new MatTableDataSource(ELEMENT_DATA);\r\n    // dataSource: any;\r\n\r\n    constructor(\r\n        private matDialog: MatDialog,\r\n        private campaignsService: CampaignsService\r\n    ) { }\r\n\r\n    openCreate(): void {\r\n        const dialogRef = this.matDialog.open(CampaignsModalComponent, {\r\n            width: '500px',\r\n            data: {firstname: this.firstname, animal: this.animal}\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.animal = result;\r\n        });\r\n    }\r\n\r\n    // openImportUsers(): void {\r\n    //     const dialogRef = this.matDialog.open(ImportUsersComponent, {\r\n    //         width: '1000px'\r\n    //     });\r\n    //\r\n    //     dialogRef.afterClosed().subscribe(result => {\r\n    //         console.log('The dialog was closed');\r\n    //         this.animal = result;\r\n    //     });\r\n    // }\r\n\r\n    // openUpdate(data: UpdateUsersInterface): void {\r\n    //     console.log(data);\r\n    //     const dialogRef = this.matDialog.open(UpdateUsersComponent, {\r\n    //         data: data,\r\n    //         width: '500px'\r\n    //     });\r\n    //\r\n    //     dialogRef.afterClosed().subscribe(result => {\r\n    //         console.log('The dialog was closed');\r\n    //         this.animal = result;\r\n    //     });\r\n    // }\r\n\r\n    // delete(id: string) {\r\n    //     console.log(id);\r\n    //     this.usersService.delete(id).subscribe(res => {\r\n    //         console.log(res);\r\n    //     }, err => {\r\n    //         console.log(err)\r\n    //     })\r\n    // }\r\n\r\n    ngOnInit() {\r\n        this.collectionOfu()\r\n    }\r\n\r\n    applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n\r\n    collectionOfu() {\r\n        this.campaignsService.collectionOfUsers().subscribe((res: any) => {\r\n            // console.log(res);\r\n            // console.log(res.users.data);\r\n            this.dataSource = new MatTableDataSource(res.campaigns.data);\r\n        }, err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CampaignsComponent } from './campaigns.component';\r\nimport { MaterialsModule } from '../utils/materials.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Ng2SmartTableModule } from 'ngx-smart-table';\r\nimport { CampaignsModalComponent } from './campaigns-modal/campaigns-modal.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CampaignsRoutingModule } from './campaigns-routing.module';\r\nimport { CampaignsService } from './campaigns.service';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MaterialsModule,\r\n        HttpClientModule,\r\n        ReactiveFormsModule,\r\n        Ng2SmartTableModule,\r\n        CampaignsRoutingModule\r\n    ],\r\n    declarations: [CampaignsComponent, CampaignsModalComponent ],\r\n    providers: [CampaignsService],\r\n    entryComponents: [ CampaignsModalComponent ]\r\n})\r\nexport class CampaignsModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CampaignsService {\r\n\r\n  constructor(\r\n      private httpClient: HttpClient\r\n  ) { }\r\n\r\n  collectionOfUsers() {\r\n        return this.httpClient.get('http://localhost:3232/api/users')\r\n  }\r\n\r\n  delete(id: string) {\r\n    return this.httpClient.delete(`http://localhost:3232/api/user/${id}`)\r\n  }\r\n}\r\n"],"sourceRoot":""}