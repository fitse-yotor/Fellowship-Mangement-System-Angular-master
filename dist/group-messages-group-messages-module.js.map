{"version":3,"sources":["webpack:///./src/app/group-messages/group-messages-modal/group-messages-modal.component.html","webpack:///./src/app/group-messages/group-messages-modal/group-messages-modal.component.scss","webpack:///./src/app/group-messages/group-messages-modal/group-messages-modal.component.ts","webpack:///./src/app/group-messages/group-messages-routing.module.ts","webpack:///./src/app/group-messages/group-messages.component.html","webpack:///./src/app/group-messages/group-messages.component.scss","webpack:///./src/app/group-messages/group-messages.component.ts","webpack:///./src/app/group-messages/group-messages.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,wHAAwH,WAAW,u+DAAu+D,sBAAsB,6kB;;;;;;;;;;;ACAhoE,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0D;AACO;AACR;AAmBzD;IAGI,0CAA0C;IAC1C,wDAAwD;IACxD,4CAA4C;IAC5C,kDAAkD;IAClD,+CAA+C;IAC/C,KAAK;IACL,qCACY,WAAwB,EACzB,SAAoD,EAC3B,IAAgB;QAFxC,gBAAW,GAAX,WAAW,CAAa;QACzB,cAAS,GAAT,SAAS,CAA2C;QAC3B,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExD,+CAAS,GAAT;QACI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;IAED,8CAAQ,GAAR;QACI,mBAAmB;QACnB,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjD,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACvC,aAAa,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC5C,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACzC,CAAC,CAAC;IACP,CAAC;IAED,wDAAkB,GAAlB,UAAmB,2BAAwD;QACvE,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;IAC7C,CAAC;IA7BQ,2BAA2B;QALvC,+DAAS,CAAC;YACP,QAAQ,EAAE,0BAA0B;;;SAGvC,CAAC;QAaO,uEAAM,CAAC,iEAAe,CAAC;yCAFH,0DAAW;YACd,8DAAY;OAXzB,2BAA2B,CA8BvC;IAAD,kCAAC;CAAA;AA9BuC;;;;;;;;;;;;;;;;;;;;;;;;ACrBC;AACc;AACa;AAEpE,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gFAAsB;KAClC;CACF,CAAC;AAMF;IAAA;IAA0C,CAAC;IAA9B,0BAA0B;QAJtC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,0BAA0B,CAAI;IAAD,iCAAC;CAAA;AAAJ;;;;;;;;;;;;ACfvC,iDAAiD,qRAAqR,gKAAgK,YAAY,gJAAgJ,qKAAqK,QAAQ,mCAAmC,QAAQ,YAAY,IAAI,sgBAAsgB,kBAAkB,qQAAqQ,sBAAsB,iQAAiQ,oBAAoB,0QAA0Q,uBAAuB,4QAA4Q,wBAAwB,kQAAkQ,mBAAmB,2OAA2O,4QAA4Q,2BAA2B,iC;;;;;;;;;;;ACA9xG,mB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACmD;AACD;AAcpG,IAAM,YAAY,GAAsB;IACpC,EAAC,QAAQ,EAAE,CAAC,EAAE,YAAY,EAAE,8CAA8C,EAAE,UAAU,EAAE,cAAc,EAAE,aAAa,EAAE,EAAE,EAAE,SAAS,EAAE,WAAW,EAAE,cAAc,EAAE,GAAG,EAAC;IACvK,EAAC,QAAQ,EAAE,CAAC,EAAE,YAAY,EAAE,+CAA+C,EAAE,UAAU,EAAE,SAAS,EAAE,aAAa,EAAE,EAAE,EAAE,SAAS,EAAE,UAAU,EAAE,cAAc,EAAE,GAAG,EAAC;IAClK,EAAC,QAAQ,EAAE,CAAC,EAAE,YAAY,EAAE,0CAA0C,EAAE,UAAU,EAAE,YAAY,EAAE,aAAa,EAAE,EAAE,EAAE,SAAS,EAAE,WAAW,EAAE,cAAc,EAAE,GAAG,EAAC;IACjK,EAAC,QAAQ,EAAE,CAAC,EAAE,YAAY,EAAE,mBAAmB,EAAG,UAAU,EAAE,aAAa,EAAE,aAAa,EAAE,EAAE,EAAE,SAAS,EAAE,WAAW,EAAE,cAAc,EAAE,GAAG,EAAC;CAC/I,CAAC;AAOF;IASI,gCAAoB,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;QAHxC,qBAAgB,GAAa,CAAC,UAAU,EAAE,cAAc,EAAE,YAAY,EAAE,eAAe,EAAE,gBAAgB,EAAE,WAAW,CAAC,CAAC;QACxH,eAAU,GAAG,IAAI,oEAAkB,CAAC,YAAY,CAAC,CAAC;IAEN,CAAC;IAE7C,2CAAU,GAAV;QAAA,iBAUC;QATG,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gHAA2B,EAAE;YAC/D,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC;SACrD,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACpC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8BAA8B;IAC9B,sEAAsE;IACtE,0BAA0B;IAC1B,UAAU;IACV,EAAE;IACF,oDAAoD;IACpD,gDAAgD;IAChD,gCAAgC;IAChC,UAAU;IACV,IAAI;IAEJ,mDAAmD;IACnD,yBAAyB;IACzB,sEAAsE;IACtE,sBAAsB;IACtB,yBAAyB;IACzB,UAAU;IACV,EAAE;IACF,oDAAoD;IACpD,gDAAgD;IAChD,gCAAgC;IAChC,UAAU;IACV,IAAI;IACJ,EAAE;IACF,uBAAuB;IACvB,wBAAwB;IACxB,IAAI;IAEJ,yCAAQ,GAAR;IACA,CAAC;IAED,4CAAW,GAAX,UAAY,WAAmB;QAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC9D,CAAC;IAxDQ,sBAAsB;QALlC,+DAAS,CAAC;YACP,QAAQ,EAAE,oBAAoB;;;SAGjC,CAAC;yCAUiC,2DAAS;OAT/B,sBAAsB,CA0DlC;IAAD,6BAAC;CAAA;AA1DkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BM;AACM;AACmB;AACN;AACN;AACc;AACS;AACuB;AAapG;IAAA;IAAmC,CAAC;IAAvB,mBAAmB;QAZ/B,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,4DAAY;gBACZ,0DAAW;gBACX,uEAAe;gBACf,kEAAmB;gBACnB,yFAA0B;gBAC1B,mEAAmB;aACtB;YACD,YAAY,EAAE,CAAC,gFAAsB,EAAE,gHAA2B,CAAC;YACnE,eAAe,EAAE,CAAC,gHAA2B,CAAC;SACjD,CAAC;OACW,mBAAmB,CAAI;IAAD,0BAAC;CAAA;AAAJ","file":"group-messages-group-messages-module.js","sourcesContent":["module.exports = \"<!--<button mat-button (click)=\\\"onNoClick()\\\">No Thanks</button>-->\\r\\n<!--<h1 mat-dialog-title>Hi {{data.name}}</h1>-->\\r\\n<!--<div mat-dialog-content>-->\\r\\n<!--<p>What's your favorite animal?</p>-->\\r\\n<!--<mat-form-field>-->\\r\\n<!--<input matInput [(ngModel)]=\\\"data.animal\\\">-->\\r\\n<!--</mat-form-field>-->\\r\\n<!--</div>-->\\r\\n\\r\\n<form [formGroup]=\\\"groupmessagesModalForm\\\" (ngSubmit)=\\\"groupmessagesModal(groupmessagesModalForm.value)\\\">\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input matInput placeholder=\\\"Campaign\\\" type=\\\"text\\\" formControlName=\\\"campaign\\\">\\r\\n    <mat-error style=\\\"color: red\\\" *ngIf=\\\"groupmessagesModalForm.get('campaign').invalid && (groupmessagesModalForm.get('campaign').dirty ||\\r\\n      groupmessagesModalForm.get('campaign').touched) && groupmessagesModalForm.get('campaign').errors?.required\\\">\\r\\n      Please Campaign !\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <!--<mat-form-field>-->\\r\\n  <!--<input matInput placeholder=\\\"Last Name\\\" type=\\\"text\\\" formControlName=\\\"lastname\\\">-->\\r\\n  <!--<mat-error style=\\\"color: red\\\" *ngIf=\\\"groupmessagesModalForm.get('lastname').invalid && (groupmessagesModalForm.get('lastname').dirty ||-->\\r\\n  <!--groupmessagesModalForm.get('lastname').touched) && !groupmessagesModalForm.get('lastname').errors?.minlength\\\">-->\\r\\n  <!--Please insert last name!-->\\r\\n  <!--</mat-error>-->\\r\\n  <!--</mat-form-field>-->\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input matInput placeholder=\\\"Contact Group\\\" type=\\\"text\\\" formControlName=\\\"contact_group\\\">\\r\\n    <mat-error style=\\\"color: red\\\" *ngIf=\\\"groupmessagesModalForm.get('contact_group').invalid && (groupmessagesModalForm.get('contact_group').dirty ||\\r\\n      groupmessagesModalForm.get('contact_group').touched) && !groupmessagesModalForm.get('contact_group').errors?.minlength\\\">\\r\\n      Please select contact group!\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <!--<mat-form-field>-->\\r\\n  <!--<mat-label>University</mat-label>-->\\r\\n  <!--<mat-select formControlName=\\\"university\\\">-->\\r\\n  <!--<mat-option *ngFor=\\\"let university of universities\\\" [value]=\\\"university.value\\\">-->\\r\\n  <!--{{university.viewValue}}-->\\r\\n  <!--</mat-option>-->\\r\\n  <!--</mat-select>-->\\r\\n  <!--</mat-form-field>-->\\r\\n  <mat-form-field>\\r\\n    <textarea matInput placeholder=\\\"write a message \\\" type=\\\"text\\\" formControlName=\\\"message\\\"></textarea>\\r\\n\\r\\n  </mat-form-field>\\r\\n\\r\\n  <!--<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" >Add contact</button>-->\\r\\n  <div mat-dialog-actions>\\r\\n    <button mat-button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\"  cdkFocusInitial >Send Group Message</button>\\r\\n    <button mat-button (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n  </div>\\r\\n</form>\"","module.exports = \"\"","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { UniversityInterface } from '../../register/register';\r\n\r\ninterface GroupMessagesModalInterface {\r\n    campaign: string;\r\n    contact_group: string;\r\n    message: string;\r\n}\r\n\r\nexport interface DialogData {\r\n    animal: string;\r\n    name: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'app-group-messages-modal',\r\n    templateUrl: './group-messages-modal.component.html',\r\n    styleUrls: ['./group-messages-modal.component.scss']\r\n})\r\nexport class GroupMessagesModalComponent implements OnInit {\r\n\r\n    groupmessagesModalForm: any;\r\n    // universities: UniversityInterface[] = [\r\n    //     {value: 'Addis Abeba', viewValue: 'Addis Abeba'},\r\n    //     {value: 'Adama', viewValue: 'Adama'},\r\n    //     {value: 'Bahirdar', viewValue: 'Bahirdar'},\r\n    //     {value: 'Hawassa', viewValue: 'Hawassa'}\r\n    // ];\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        public dialogRef: MatDialogRef<GroupMessagesModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // this.getEvent();\r\n        this.groupmessagesModalForm = this.formBuilder.group({\r\n            campaign: [null, [Validators.required]],\r\n            contact_group: [null, [Validators.required]],\r\n            message: [null, [Validators.required]],\r\n        });\r\n    }\r\n\r\n    groupmessagesModal(groupmessagesModalInterface: GroupMessagesModalInterface) {\r\n        console.log(groupmessagesModalInterface);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { GroupMessagesComponent } from './group-messages.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: GroupMessagesComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class GroupMessagesRoutingModule { }\r\n","module.exports = \"<p style=\\\"font-weight: bolder; font-size: x-large\\\"> Group Messages </p>\\r\\n<!--<ol>-->\\r\\n<!--<li>-->\\r\\n<!--<mat-form-field>-->\\r\\n<!--<input matInput [(ngModel)]=\\\"name\\\" placeholder=\\\"What's your name?\\\">-->\\r\\n<!--</mat-form-field>-->\\r\\n<!--</li>-->\\r\\n<!--<div class=\\\"create\\\" style=\\\"color: yellow; width: 100%\\\">-->\\r\\n<!--<li>-->\\r\\n<!--<button class=\\\"l1\\\" mat-raised-button (click)=\\\"openDialog()\\\">Create</button>-->\\r\\n<button style=\\\"margin-top: 61px; left: 15px; \\\" mat-raised-button (click)=\\\"openCreate()\\\"> New Group Message</button>\\r\\n<!--<button mat-button color=\\\"primary\\\" style=\\\"margin-top: 61px; left: 50px\\\" mat-raised-button (click)=\\\"openImportContact()\\\"> Import Contact  </button>-->\\r\\n<!--</li>-->\\r\\n<!--<li *ngIf=\\\"animal\\\">-->\\r\\n<!--You chose: <i>{{animal}}</i>-->\\r\\n<!--</li>-->\\r\\n<!--&lt;!&ndash;</ol>&ndash;&gt;-->\\r\\n<!--</div>-->\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <mat-form-field>\\r\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <table style=\\\"width: 100%\\\" mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n    <!-- Position Column -->\\r\\n    <ng-container matColumnDef=\\\"position\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"font-weight: bold\\\"> No. </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"sent_message\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"font-weight: bold\\\">Sent Message </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.sent_message}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"group_name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"font-weight: bold\\\">Group Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.group_name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Weight Column -->\\r\\n    <ng-container matColumnDef=\\\"campaign_name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"font-weight: bold\\\"> Campaign Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.campaign_name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Symbol Column -->\\r\\n    <ng-container matColumnDef=\\\"sent_msg_count\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"font-weight: bold\\\"> Sent Msg Count </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.sent_msg_count}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Symbol Column -->\\r\\n    <ng-container matColumnDef=\\\"date_time\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"font-weight: bold\\\"> Date Time </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date_time}}\\r\\n        <!--<button mat-button=\\\"\\\">-->\\r\\n        <!--<mat-icon  mat-raised-button (click)=\\\"openUpdate(element)\\\">edit</mat-icon></button>-->\\r\\n        <!--<button mat-button=\\\"\\\">-->\\r\\n        <!--<mat-icon style=\\\"color: red;\\\" mat-raised-button-->\\r\\n        <!--(click)=\\\"delete(element.created_by)\\\">delete_outline</mat-icon></button>-->\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatBottomSheet, MatBottomSheetRef, MatDialog, MatTableDataSource } from '@angular/material';\r\nimport { GroupMessagesModalComponent } from './group-messages-modal/group-messages-modal.component';\r\n// import { UpdateContactComponent, UpdateContactInterface } from './update-contact/update-contact.component';\r\n// import { ImportContactComponent } from './import-contact/import-contact.component';\r\n\r\n\r\nexport interface PeriodicElement {\r\n    position: number;\r\n    sent_message: string;\r\n    group_name: string;\r\n    campaign_name: string;\r\n    sent_msg_count: string;\r\n    date_time: string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n    {position: 1, sent_message: 'Hey this is to inform you about your project', group_name: 'Main Leaders', campaign_name: '', date_time: '17/2/2012', sent_msg_count: '1'},\r\n    {position: 2, sent_message: 'Hello tomorrow we will have worship rehearsal', group_name: 'Worship', campaign_name: '', date_time: '5/3/2012', sent_msg_count: '3'},\r\n    {position: 3, sent_message: 'Hey friends next week we have NO program', group_name: 'Literature', campaign_name: '', date_time: '23/4/2012', sent_msg_count: '4'},\r\n    {position: 4, sent_message: 'ነገ ጥናት አለን እንዳትቀሩ' , group_name: 'Bible study', campaign_name: '', date_time: '12/7/2012', sent_msg_count: '4'},\r\n];\r\n\r\n@Component({\r\n    selector: 'app-group-messages',\r\n    templateUrl: './group-messages.component.html',\r\n    styleUrls: ['./group-messages.component.scss']\r\n})\r\nexport class GroupMessagesComponent implements OnInit {\r\n\r\n    animal: string;\r\n    message: string;\r\n\r\n\r\n    displayedColumns: string[] = ['position', 'sent_message', 'group_name', 'campaign_name', 'sent_msg_count', 'date_time'];\r\n    dataSource = new MatTableDataSource(ELEMENT_DATA);\r\n\r\n    constructor(private matDialog: MatDialog) { }\r\n\r\n    openCreate(): void {\r\n        const dialogRef = this.matDialog.open(GroupMessagesModalComponent, {\r\n            width: '500px',\r\n            data: {message: this.message, animal: this.animal}\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.animal = result;\r\n        });\r\n    }\r\n\r\n    // openImportContact(): void {\r\n    //     const dialogRef = this.matDialog.open(ImportContactComponent, {\r\n    //         width: '1000px'\r\n    //     });\r\n    //\r\n    //     dialogRef.afterClosed().subscribe(result => {\r\n    //         console.log('The dialog was closed');\r\n    //         this.animal = result;\r\n    //     });\r\n    // }\r\n\r\n    // openUpdate(data: UpdateContactInterface): void {\r\n    //     console.log(data);\r\n    //     const dialogRef = this.matDialog.open(UpdateContactComponent, {\r\n    //         data: data,\r\n    //         width: '500px'\r\n    //     });\r\n    //\r\n    //     dialogRef.afterClosed().subscribe(result => {\r\n    //         console.log('The dialog was closed');\r\n    //         this.animal = result;\r\n    //     });\r\n    // }\r\n    //\r\n    // delete(uni: string){\r\n    //     console.log(uni);\r\n    // }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialsModule } from '../utils/materials.module';\r\nimport { Ng2SmartTableModule } from 'ngx-smart-table';\r\nimport { GroupMessagesComponent } from './group-messages.component';\r\nimport { GroupMessagesRoutingModule } from './group-messages-routing.module';\r\nimport { GroupMessagesModalComponent } from './group-messages-modal/group-messages-modal.component';\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MaterialsModule,\r\n        ReactiveFormsModule,\r\n        GroupMessagesRoutingModule,\r\n        Ng2SmartTableModule\r\n    ],\r\n    declarations: [GroupMessagesComponent, GroupMessagesModalComponent],\r\n    entryComponents: [GroupMessagesModalComponent]\r\n})\r\nexport class GroupMessagesModule { }\r\n"],"sourceRoot":""}