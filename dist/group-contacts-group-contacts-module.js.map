{"version":3,"sources":["webpack:///./src/app/group-contacts/group-contacts-modal/group-contacts-modal.component.html","webpack:///./src/app/group-contacts/group-contacts-modal/group-contacts-modal.component.scss","webpack:///./src/app/group-contacts/group-contacts-modal/group-contacts-modal.component.ts","webpack:///./src/app/group-contacts/group-contacts-routing.module.ts","webpack:///./src/app/group-contacts/group-contacts.component.html","webpack:///./src/app/group-contacts/group-contacts.component.scss","webpack:///./src/app/group-contacts/group-contacts.component.ts","webpack:///./src/app/group-contacts/group-contacts.module.ts","webpack:///./src/app/group-contacts/update-contact/update-contact.component.html","webpack:///./src/app/group-contacts/update-contact/update-contact.component.scss","webpack:///./src/app/group-contacts/update-contact/update-contact.component.ts"],"names":[],"mappings":"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","file":"group-contacts-group-contacts-module.js","sourcesContent":["module.exports = \"<!--<button mat-button (click)=\\\"onNoClick()\\\">No Thanks</button>-->\\r\\n<!--<h1 mat-dialog-title>Hi {{data.name}}</h1>-->\\r\\n<!--<div mat-dialog-content>-->\\r\\n<!--<p>What's your favorite animal?</p>-->\\r\\n<!--<mat-form-field>-->\\r\\n<!--<input matInput [(ngModel)]=\\\"data.animal\\\">-->\\r\\n<!--</mat-form-field>-->\\r\\n<!--</div>-->\\r\\n\\r\\n<form [formGroup]=\\\"groupContactsModalForm\\\" (ngSubmit)=\\\"groupContactsModal(groupContactsModalForm.value)\\\">\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input matInput placeholder=\\\"Add Group Name\\\" type=\\\"text\\\" formControlName=\\\"groupname\\\">\\r\\n    <mat-error style=\\\"color: red\\\" *ngIf=\\\"groupContactsModalForm.get('groupname').invalid && (groupContactsModalForm.get('groupname').dirty ||\\r\\n      groupContactsModalForm.get('groupname').touched) && groupContactsModalForm.get('groupname').errors?.required\\\">\\r\\n      Please insert Group Name!\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <textarea matInput placeholder=\\\"Enter description of the Group \\\" type=\\\"text\\\" formControlName=\\\"description\\\"></textarea>\\r\\n    <!--<mat-error style=\\\"color: red\\\" *ngIf=\\\"groupContactsModalForm.get('description').invalid && (groupContactsModalForm.get('description').dirty ||-->\\r\\n      <!--groupContactsModalForm.get('description').touched) && !groupContactsModalForm.get('description').errors?.minlength\\\">-->\\r\\n      <!--Please insert last name!-->\\r\\n    <!--</mat-error>-->\\r\\n  </mat-form-field>\\r\\n\\r\\n  <!--<mat-form-field>-->\\r\\n    <!--<input matInput placeholder=\\\"Phone number\\\" type=\\\"text\\\" formControlName=\\\"phone\\\">-->\\r\\n    <!--<mat-error style=\\\"color: red\\\" *ngIf=\\\"groupContactsModalForm.get('phone').invalid && (groupContactsModalForm.get('phone').dirty ||-->\\r\\n      <!--groupContactsModalForm.get('phone').touched) && !groupContactsModalForm.get('phone').errors?.minlength\\\">-->\\r\\n      <!--Please insert phone number!-->\\r\\n    <!--</mat-error>-->\\r\\n  <!--</mat-form-field>-->\\r\\n\\r\\n  <!--<mat-form-field>-->\\r\\n    <!--<mat-label>University</mat-label>-->\\r\\n    <!--<mat-select formControlName=\\\"university\\\">-->\\r\\n      <!--<mat-option *ngFor=\\\"let university of universities\\\" [value]=\\\"university.value\\\">-->\\r\\n        <!--{{university.viewValue}}-->\\r\\n      <!--</mat-option>-->\\r\\n    <!--</mat-select>-->\\r\\n  <!--</mat-form-field>-->\\r\\n\\r\\n  <!--<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" >Add contact</button>-->\\r\\n  <div mat-dialog-actions>\\r\\n    <button mat-button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\"  cdkFocusInitial >Add Group</button>\\r\\n    <button mat-button (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n  </div>\\r\\n</form>\"","module.exports = \"\"","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { UniversityInterface } from '../../register/register';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { ELEMENT_DATA } from '../group-contacts.component';\r\n\r\ninterface GroupContactsModalInterface {\r\n    groupname: string;\r\n    description: string;\r\n    // phone: string;\r\n    // university: string;\r\n}\r\n\r\nexport interface DialogData {\r\n    animal: string;\r\n    name: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-group-contacts-modal',\r\n  templateUrl: './group-contacts-modal.component.html',\r\n  styleUrls: ['./group-contacts-modal.component.scss']\r\n})\r\nexport class GroupContactsModalComponent implements OnInit {\r\n\r\n    groupContactsModalForm: any;\r\n    // universities: UniversityInterface[] = [\r\n    //     {value: 'Addis Abeba', viewValue: 'Addis Abeba'},\r\n    //     {value: 'Adama', viewValue: 'Adama'},\r\n    //     {value: 'Bahirdar', viewValue: 'Bahirdar'},\r\n    //     {value: 'Hawassa', viewValue: 'Hawassa'}\r\n    // ];\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        public dialogRef: MatDialogRef<GroupContactsModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // this.getEvent();\r\n        this.groupContactsModalForm = this.formBuilder.group({\r\n            groupname: [null, [Validators.required]],\r\n            description: [null, [Validators.required]],\r\n            // phone: [null, [Validators.required]],\r\n            // university: [null, [Validators.required]],\r\n        });\r\n    }\r\n\r\n    groupContactsModal(groupContactsModalInterface: GroupContactsModalInterface) {\r\n        console.log(groupContactsModalInterface);\r\n        // ELEMENT_DATA.push(groupContactsModalInterface)\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { GroupContactsComponent } from './group-contacts.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: GroupContactsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class GroupContactsRoutingModule { }\r\n","module.exports = \"<p style=\\\"font-weight: bolder; font-size: x-large\\\"> Group Contacts </p>\\r\\n<!--<ol>-->\\r\\n<!--<li>-->\\r\\n<!--<mat-form-field>-->\\r\\n<!--<input matInput [(ngModel)]=\\\"name\\\" placeholder=\\\"What's your name?\\\">-->\\r\\n<!--</mat-form-field>-->\\r\\n<!--</li>-->\\r\\n<!--<div class=\\\"create\\\" style=\\\"color: yellow; width: 100%\\\">-->\\r\\n<!--<li>-->\\r\\n<!--<button class=\\\"l1\\\" mat-raised-button (click)=\\\"openDialog()\\\">Create</button>-->\\r\\n<button style=\\\"margin-top: 61px\\\" mat-raised-button (click)=\\\"openCreate()\\\">Add New Group Contact</button>\\r\\n<!--</li>-->\\r\\n<!--<li *ngIf=\\\"animal\\\">-->\\r\\n<!--You chose: <i>{{animal}}</i>-->\\r\\n<!--</li>-->\\r\\n<!--&lt;!&ndash;</ol>&ndash;&gt;-->\\r\\n<!--</div>-->\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <mat-form-field>\\r\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <table style=\\\"width: 100%\\\" mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n    <!-- Position Column -->\\r\\n    <ng-container matColumnDef=\\\"position\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"font-weight: bold\\\"> No. </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"groupname\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"font-weight: bold\\\"> Group Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.groupname}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"description\\\">\\r\\n      <mat-form-field appearance=\\\"standard\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"font-weight: bold\\\"> Description </th>\\r\\n      <input matInput placeholder=\\\"Description\\\">\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\r\\n      </mat-form-field>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"number_of_contacts\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"font-weight: bold\\\"> Number Of Contacts </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.number_of_contacts}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"updated_by\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"font-weight: bold\\\"> Updated By </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.updated_by}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Weight Column -->\\r\\n    <!--<ng-container matColumnDef=\\\"phone\\\">-->\\r\\n      <!--<th mat-header-cell *matHeaderCellDef style=\\\"font-weight: bold\\\"> Phone </th>-->\\r\\n      <!--<td mat-cell *matCellDef=\\\"let element\\\"> {{element.phone}} </td>-->\\r\\n    <!--</ng-container>-->\\r\\n\\r\\n    <!-- Symbol Column -->\\r\\n    <!--<ng-container matColumnDef=\\\"university\\\">-->\\r\\n      <!--<th mat-header-cell *matHeaderCellDef style=\\\"font-weight: bold\\\"> University </th>-->\\r\\n      <!--<td mat-cell *matCellDef=\\\"let element\\\"> {{element.university}} </td>-->\\r\\n    <!--</ng-container>-->\\r\\n\\r\\n    <!-- Symbol Column -->\\r\\n    <ng-container matColumnDef=\\\"action\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"font-weight: bold\\\"> Action </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        <button mat-button=\\\"\\\">\\r\\n          <mat-icon  mat-raised-button (click)=\\\"openUpdate(element)\\\">edit</mat-icon></button>\\r\\n        <button mat-button=\\\"\\\">\\r\\n          <mat-icon style=\\\"color: red; \\\" mat-raised-button\\r\\n                    (click)=\\\"delete(element.university)\\\">delete_outline</mat-icon></button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatTableDataSource } from '@angular/material';\r\nimport { GroupContactsModalComponent } from './group-contacts-modal/group-contacts-modal.component';\r\nimport { UpdateContactInterface } from '../contacts/update-contact/update-contact.component';\r\nimport { UpdateContactComponent } from './update-contact/update-contact.component';\r\n\r\nexport interface PeriodicElement {\r\n    groupname: string;\r\n    description: string\r\n    position?: number;\r\n    number_of_contacts?: number\r\n    updated_by?: string;\r\n    action?: string\r\n    // university: string;\r\n    // phone: string;\r\n}\r\n\r\nexport let ELEMENT_DATA: PeriodicElement[] = [\r\n    {position: 1, groupname: 'Worship Group', description: 'it is a group where members train and lead worship in the fellowship', number_of_contacts: 20, updated_by: 'Yitages Berhanu'},\r\n    {position: 2, groupname: 'Prayers Group', description: '', number_of_contacts: 150, updated_by: 'Zion Shimeles'},\r\n    {position: 3, groupname: 'Bible Study Group', description: 'Bible study group is a group to learn and share bible teachings', number_of_contacts: 60, updated_by: 'Meheret Tesfaye'},\r\n    {position: 4, groupname: 'Natanim Group', description: 'Natanim group goal is to clean the house of God', number_of_contacts: 30, updated_by: 'Yitages Berhanu'},\r\n];\r\n\r\n@Component({\r\n  selector: 'app-group-contacts',\r\n  templateUrl: './group-contacts.component.html',\r\n  styleUrls: ['./group-contacts.component.scss']\r\n})\r\nexport class GroupContactsComponent implements OnInit {\r\n\r\n    animal: string;\r\n    groupname: string;\r\n\r\n\r\n    displayedColumns: string[] = ['position', 'groupname', 'description', 'number_of_contacts', 'updated_by', 'action'];\r\n    dataSource = new MatTableDataSource(ELEMENT_DATA);\r\n\r\n    constructor(private matDialog: MatDialog) { }\r\n\r\n    openCreate(): void {\r\n        const dialogRef = this.matDialog.open(GroupContactsModalComponent, {\r\n            width: '500px',\r\n            data: {groupname: this.groupname, animal: this.animal}\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.animal = result;\r\n        });\r\n    }\r\n\r\n    openUpdate(data: UpdateContactInterface): void {\r\n        console.log(data);\r\n        const dialogRef = this.matDialog.open(UpdateContactComponent, {\r\n            data: data,\r\n            width: '500px'\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.animal = result;\r\n        });\r\n    }\r\n\r\n    delete(uni: string){\r\n        console.log(uni);\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GroupContactsComponent } from './group-contacts.component';\r\nimport { GroupContactsRoutingModule } from './group-contacts-routing.module';\r\nimport { GroupContactsModalComponent } from './group-contacts-modal/group-contacts-modal.component';\r\nimport { UpdateContactComponent } from './update-contact/update-contact.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialsModule } from '../utils/materials.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n      FormsModule,\r\n      MaterialsModule,\r\n      ReactiveFormsModule,\r\n      GroupContactsRoutingModule\r\n  ],\r\n  declarations: [GroupContactsComponent, GroupContactsModalComponent, UpdateContactComponent],\r\n    entryComponents: [GroupContactsModalComponent, UpdateContactComponent]\r\n})\r\nexport class GroupContactsModule { }\r\n","module.exports = \"<p><!--<button mat-button (click)=\\\"onNoClick()\\\">No Thanks</button>-->\\r\\n  <!--<h1 mat-dialog-title>Hi {{data.name}}</h1>-->\\r\\n  <!--<div mat-dialog-content>-->\\r\\n  <!--<p>What's your favorite animal?</p>-->\\r\\n  <!--<mat-form-field>-->\\r\\n  <!--<input matInput [(ngModel)]=\\\"data.animal\\\">-->\\r\\n  <!--</mat-form-field>-->\\r\\n  <!--</div>-->\\r\\n\\r\\n<form [formGroup]=\\\"updateContactForm\\\" (ngSubmit)=\\\"updateContact(updateContactForm.value)\\\">\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input matInput placeholder=\\\"Group Name\\\" type=\\\"text\\\" formControlName=\\\"groupname\\\">\\r\\n    <mat-error style=\\\"color: red\\\" *ngIf=\\\"updateContactForm.get('groupname').invalid && (updateContactForm.get('groupname').dirty ||\\r\\n      updateContactForm.get('groupname').touched) && updateContactForm.get('groupname').errors?.required\\\">\\r\\n      Please insert group name!\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input matInput placeholder=\\\" Description\\\" type=\\\"text\\\" formControlName=\\\"description\\\">\\r\\n    <!--<mat-error style=\\\"color: red\\\" *ngIf=\\\"updateContactForm.get('description').invalid && (updateContactForm.get('description').dirty ||-->\\r\\n      <!--updateContactForm.get('description').touched) && !updateContactForm.get('description').errors?.minlength\\\">-->\\r\\n      <!--Please insert last name!-->\\r\\n    <!--</mat-error>-->\\r\\n  </mat-form-field>\\r\\n\\r\\n  <!--<mat-form-field>-->\\r\\n    <!--<input matInput placeholder=\\\"Phone number\\\" type=\\\"text\\\" formControlName=\\\"phone\\\">-->\\r\\n    <!--<mat-error style=\\\"color: red\\\" *ngIf=\\\"updateContactForm.get('phone').invalid && (updateContactForm.get('phone').dirty ||-->\\r\\n      <!--updateContactForm.get('phone').touched) && !updateContactForm.get('phone').errors?.minlength\\\">-->\\r\\n      <!--Please insert phone number!-->\\r\\n    <!--</mat-error>-->\\r\\n  <!--</mat-form-field>-->\\r\\n\\r\\n  <!--<mat-form-field>-->\\r\\n    <!--<mat-label>University</mat-label>-->\\r\\n    <!--<mat-select formControlName=\\\"university\\\">-->\\r\\n      <!--<mat-option *ngFor=\\\"let university of universities\\\" [value]=\\\"university.value\\\">-->\\r\\n        <!--{{university.viewValue}}-->\\r\\n      <!--</mat-option>-->\\r\\n    <!--</mat-select>-->\\r\\n  <!--</mat-form-field>-->\\r\\n\\r\\n  <!--<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" >Add contact</button>-->\\r\\n  <div mat-dialog-actions>\\r\\n    <button mat-button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\"  cdkFocusInitial >Update</button>\\r\\n    <button mat-button (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n  </div>\\r\\n</form>\"","module.exports = \"\"","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { UniversityInterface } from '../../register/register';\r\n\r\nexport interface UpdateContactInterface {\r\n    position?: string;\r\n    groupname: string;\r\n    description: string;\r\n    // phone: string;\r\n    // university: string;\r\n}\r\n\r\n// export interface DialogData {\r\n//     animal: string;\r\n//     name: string;\r\n// }\r\n\r\n@Component({\r\n    selector: 'app-update-contact',\r\n    templateUrl: './update-contact.component.html',\r\n    styleUrls: ['./update-contact.component.scss']\r\n})\r\nexport class UpdateContactComponent implements OnInit {\r\n\r\n    updateContactForm: any;\r\n    // universities: UniversityInterface[] = [\r\n    //     {value: 'Addis Ababa', viewValue: 'Addis Ababa'},\r\n    //     {value: 'Adama', viewValue: 'Adama'},\r\n    //     {value: 'Bahirdar', viewValue: 'Bahirdar'},\r\n    //     {value: 'Hawassa', viewValue: 'Hawassa'}\r\n    // ];\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        public dialogRef: MatDialogRef<UpdateContactComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: UpdateContactInterface) {}\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // this.getEvent();\r\n        console.log(this.data);\r\n        this.updateContactForm = this.formBuilder.group({\r\n            groupname: [this.data.groupname, [Validators.required]],\r\n            description: [this.data.description, [Validators.required]],\r\n            // phone: [this.data.phone, [Validators.required]],\r\n            // university: [this.data.university, [Validators.required]],\r\n        });\r\n    }\r\n\r\n    updateContact(updateContactInterface: UpdateContactInterface) {\r\n        console.log(updateContactInterface);\r\n    }\r\n}"],"sourceRoot":""}